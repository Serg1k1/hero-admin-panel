{"version":3,"sources":["api/apiSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","hooks/http.hook.js","components/heroesFilters/filtersSlice.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getHeroes","query","providesTags","createHero","mutation","hero","url","method","body","invalidatesTags","deleteHero","id","concat","useGetHeroesQuery","useCreateHeroMutation","useDeleteHeroMutation","HeroesListItem","_ref","elementClassName","name","description","element","onDelete","_jsxs","className","children","_jsx","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","data","heroes","isLoading","isError","activeFilter","useSelector","state","filters","filteredHeroes","useMemo","slice","filter","item","useCallback","elements","arr","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","useHttp","request","async","arguments","undefined","headers","response","fetch","ok","Error","status","json","e","filtersAdapter","createEntityAdapter","initialState","getInitialState","filtersLoadingStatus","filterHeroes","createAsyncThunk","filtersSlice","createSlice","reducers","filtersActiveFilterChanged","action","payload","extraReducers","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","selectAll","getSelectors","actions","reducer","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","devTools","process","HeroesAddForm","heroName","setHeroName","useState","heroDescr","setHeroDescr","heroElement","setHeroElement","getState","onSubmit","preventDefault","newHero","uuidv4","unwrap","htmlFor","required","placeholder","value","onChange","target","renderFilters","label","HeroesFilters","dispatch","useDispatch","useEffect","btnClass","App","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.3910e905.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const apiSlice = createApi({\r\n    reducerPath: 'api',\r\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://festive-crystalline-twister.glitch.me/' }),\r\n    tagTypes: ['Heroes'],\r\n    endpoints: builder => ({\r\n        getHeroes: builder.query({\r\n            query: () => '/heroes',\r\n            providesTags: ['Heroes']\r\n        }),\r\n        createHero: builder.mutation({\r\n            query: hero => ({\r\n                url: '/heroes',\r\n                method: 'POST',\r\n                body: hero\r\n            }),\r\n            invalidatesTags: ['Heroes']\r\n        }),\r\n        deleteHero: builder.mutation({\r\n            query: id => ({\r\n                url: `/heroes/${id}`,\r\n                method: 'DELETE'\r\n            }),\r\n            invalidatesTags: ['Heroes']\r\n        })\r\n    })\r\n});\r\n\r\nexport const { useGetHeroesQuery, useCreateHeroMutation, useDeleteHeroMutation } = apiSlice","const HeroesListItem = ({ name, description, element, onDelete }) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li\n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"https://cdn4.iconfinder.com/data/icons/political-elections/50/48-512.png\"\n                className=\"img-fluid w-25 d-inline\"\n                alt=\"unknown hero\"\n                style={{ 'objectFit': 'cover' }} />\n            <div className=\"card-body\">\n\n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span onClick={onDelete}\n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","// import { useHttp } from '../../hooks/http.hook';\nimport { useEffect, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n// import { heroDeleted, fetchHeroes } from './heroesSlice';\nimport { useGetHeroesQuery, useDeleteHeroMutation } from '../../api/apiSlice';\n\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss';\n\nconst HeroesList = () => {\n\n    const {\n        data: heroes = [],\n        isLoading,\n        isError,\n    } = useGetHeroesQuery();\n\n    const [deleteHero] = useDeleteHeroMutation();\n\n    const activeFilter = useSelector(state => state.filters.activeFilter);\n\n    const filteredHeroes = useMemo(() => {\n        const filteredHeroes = heroes.slice();\n\n        if (activeFilter === 'all') {\n            return filteredHeroes;\n        } else {\n            return filteredHeroes.filter(item => item.element === activeFilter)\n        }\n    }, [heroes, activeFilter])\n\n    // const filteredHeroes = useSelector(state => {\n    //     if (state.filters.activeFilter === 'all') {\n    //         return state.heroes.heroes;\n    //     } else {\n    //         return state.heroes.heroes.filter(item => item.element === state.filters.activeFilter)\n    //     }\n    // })\n\n    // const dispatch = useDispatch();\n    // const { request } = useHttp();\n\n    // useEffect(() => {\n    //     dispatch(fetchHeroes());\n\n    //     // eslint-disable-next-line\n    // }, []);\n\n    const onDelete = useCallback((id) => {\n        deleteHero(id)\n        // eslint-disable-next-line  \n    }, []);\n\n    if (isLoading) {\n        return <Spinner />;\n    } else if (isError) {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return (\n                <CSSTransition\n                    timeout={0}\n                    classNames=\"hero\">\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({ id, ...props }) => {\n            return (\n                <CSSTransition\n                    key={id}\n                    timeout={500}\n                    classNames=\"hero\">\n                    <HeroesListItem  {...props} onDelete={() => onDelete(id)} />\n                </CSSTransition>\n            )\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component=\"ul\">\n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;","export const useHttp = () => {\n\n    const request = async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\n\n        try {\n            const response = await fetch(url, { method, body, headers });\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch (e) {\n            throw e;\n        }\n    };\n    return {\n        request\n    }\n}","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from '../../hooks/http.hook';\r\n\r\n// const initialState = {\r\n//     filters: [],\r\n//     filtersLoadingStatus: 'idle',\r\n//     activeFilter: 'all'\r\n// }\r\n\r\nconst filtersAdapter = createEntityAdapter();\r\n\r\nconst initialState = filtersAdapter.getInitialState({\r\n    filtersLoadingStatus: 'idle',\r\n    activeFilter: 'all'\r\n})\r\n\r\nexport const filterHeroes = createAsyncThunk(\r\n    \"filters/filterHeroes\",\r\n    async () => {\r\n        const { request } = useHttp();\r\n        return await request(\"https://festive-crystalline-twister.glitch.me/filters\");\r\n    }\r\n)\r\n\r\nconst filtersSlice = createSlice({\r\n    name: 'filters',\r\n    initialState,\r\n    reducers: {\r\n        filtersActiveFilterChanged: (state, action) => {\r\n            state.activeFilter = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(filterHeroes.pending, state => { state.filtersLoadingStatus = 'loading' })\r\n            .addCase(filterHeroes.fulfilled, (state, action) => {\r\n                state.filtersLoadingStatus = 'idle';\r\n                filtersAdapter.setAll(state, action.payload);\r\n            })\r\n            .addCase(filterHeroes.rejected, state => {\r\n                state.filtersLoadingStatus = 'error';\r\n            })\r\n            .addDefaultCase(() => { })\r\n    }\r\n});\r\n\r\n\r\nexport const { selectAll } = filtersAdapter.getSelectors((state) => state.filters);\r\n\r\nconst { actions, reducer } = filtersSlice;\r\nexport default reducer;\r\nexport const {\r\n    filtersActiveFilterChanged,\r\n} = actions;","import { configureStore } from '@reduxjs/toolkit';\n// import heroes from '../components/heroesList/heroesSlice';\nimport filters from '../components/heroesFilters/filtersSlice';\nimport { apiSlice } from '../api/apiSlice';\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n};\n\nconst enhancer = (createStore) => (...args) => {\n    const store = createStore(...args);\n\n    const oldDispatch = store.dispatch;\n    store.dispatch = (action) => {\n        if (typeof action === 'string') {\n            return oldDispatch({\n                type: action\n            })\n        }\n        return oldDispatch(action)\n    }\n    return store;\n}\n\n// const store = createStore(\n//     combineReducers({ heroes, filters }),\n//     compose(applyMiddleware(thunk, stringMiddleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n// );\n\nconst store = configureStore({\n    reducer: { /*heroes*/ filters, [apiSlice.reducerPath]: apiSlice.reducer },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware, apiSlice.middleware),\n    devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport default store;","import { useHttp } from '../../hooks/http.hook';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport store from '../../store';\n\nimport { selectAll } from '../heroesFilters/filtersSlice';\nimport { useCreateHeroMutation } from '../../api/apiSlice';\n\n\nconst HeroesAddForm = () => {\n\n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElement, setHeroElement] = useState('');\n\n    const [createHero, { isLoading }] = useCreateHeroMutation();\n\n    const { filtersLoadingStatus } = useSelector(state => state.filters);\n    const filters = selectAll(store.getState());\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElement\n        }\n\n        createHero(newHero).unwrap();\n\n        setHeroName('');\n        setHeroDescr('');\n        setHeroElement('');\n    }\n\n    const renderFilters = (filters, status) => {\n        if (status === 'loading') {\n            return <option>Загрузка элементов</option>\n        } else if (status === 'error') {\n            return <option>Ошибка загрузки</option>\n        }\n\n        if (filters && filters.length > 0) {\n            return filters.map(({ name, label }) => {\n                // eslint-disable-next-line\n                if (name === 'all') return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input\n                    required\n                    type=\"text\"\n                    name=\"name\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    placeholder=\"Как меня зовут?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)} />\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\"\n                    className=\"form-control\"\n                    id=\"text\"\n                    placeholder=\"Что я умею?\"\n                    style={{ \"height\": '130px' }}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)} />\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select\n                    required\n                    className=\"form-select\"\n                    id=\"element\"\n                    name=\"element\"\n                    value={heroElement}\n                    onChange={(e) => setHeroElement(e.target.value)}>\n                    <option value=\"\">Я владею элементом...</option>\n                    {renderFilters(filters, filtersLoadingStatus)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import { useHttp } from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport store from '../../store';\n\nimport { filtersActiveFilterChanged, filterHeroes, selectAll } from './filtersSlice';\n\nimport Spinner from '../spinner/Spinner';\n\nconst HeroesFilters = () => {\n\n    const { filtersLoadingStatus, activeFilter } = useSelector(state => state.filters);\n    const filters = selectAll(store.getState())\n    const dispatch = useDispatch();\n    const { request } = useHttp();\n\n    // Запрос на сервер для получения фильтров и последовательной смены состояния\n    useEffect(() => {\n        dispatch(filterHeroes(request));\n\n        // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner />;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\n        }\n\n        // Данные в json-файле я расширил классами и текстом\n        return arr.map(({ name, className, label }) => {\n\n            // Используем библиотеку classnames и формируем классы динамически\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n\n            return <button\n                key={name}\n                id={name}\n                className={btnClass}\n                onClick={() => dispatch(filtersActiveFilterChanged(name))}\n            >{label}</button>\n        })\n    }\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}